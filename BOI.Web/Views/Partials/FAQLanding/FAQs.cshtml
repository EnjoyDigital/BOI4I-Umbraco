@using Umbraco.Cms.Core.Strings
@inject IShortStringHelper shortStringHelper;
@inherits UmbracoViewPage<FAQResultsViewModel>

@if (Model.Results != null && Model.Results.QueryResults != null && Model.Results.QueryResults.Count() > 0)
{
    var Faqs = Model.Results.QueryResults.OrderBy(y => y.SortOrder);
    var GroupedFaqs = Faqs.GroupBy(y => y.FAQQuestion[0].ToString().ToUpper());
    var FaqsResultText = Faqs.Count() > 1 ? "results" : "result";
    
    <div id="faqResult">

        <div class="product-table-caption">
            <span class="h3 product-table-caption__title">@Faqs.Count() @FaqsResultText</span>
            <a class="print-products js-print-products" href="" title="Click to download FAQ PDF">
                <svg class="[ icon icon-print-alt -blue ]" aria-hidden="true">
                    <use xlink:href="#sprite-icon-print-alt"></use>
                </svg>
                <span>Download FAQ PDF</span>
            </a>
        </div>

        @foreach (var groupedFaq in GroupedFaqs)
        {
            <div class="criteria-category" data-letter="@groupedFaq.Key">
                <h3>@groupedFaq.Key</h3>

                @foreach (var criteria in groupedFaq.OrderBy(y => y.SortOrder))
                {
                    var criteriaId = criteria.NameId;
                    var headingId = $"{criteriaId}-heading";
                    var contentId = $"{criteriaId}-content";
                    <div class="accordion" id="@criteriaId">
                        <button class="accordion-heading" id="@headingId" aria-controls="@contentId" aria-expanded="false">
                            @criteria.FAQQuestion
                            <i class="toggle"></i>
                        </button>
                        <div class="accordion-content rich-text" id="@contentId" aria-labelledby="@headingId">
                            @Html.Raw(criteria.FAQAnswer)

                            @if (criteria.FAQTabs != null && criteria.FAQTabs.Any())
                            {
                                foreach (var tab in criteria.FAQTabs)
                                {
                                    var tabId = tab.FAQTabQuestion.ToLower().ToCleanString(shortStringHelper, CleanStringType.UrlSegment);
                                    var tabHeadingId = $"{tabId}-heading";
                                    var tabContentId = $"{tabId}-content";
                                    <div class="accordion" id="@tabId">
                                        <button class="accordion-heading" id="@tabHeadingId" aria-controls="@tabContentId" aria-expanded="false">
                                            @tab.FAQTabQuestion
                                            <i class="toggle"></i>
                                        </button>
                                        <div class="accordion-content rich-text" id="@tabContentId" aria-labelledby="@tabHeadingId">
                                            @Html.Raw(tab.FAQAnswer)

                                            <partial name="~/Views/Partials/AccordionLink.cshtml" model="@(new string("Link to this FAQ"))" />
                                        </div>
                                    </div>
                                }
                            }
                            <partial name="~/Views/Partials/AccordionLink.cshtml" model="@(new string("Link to this FAQ"))" />
                        </div>
                    </div>
                }
            </div>
        }
    </div>
}
else
{
    <p>@Model.FAqnoResultFoundText</p>
}
