@using BOI.Core.Web.Constants
@inherits UmbracoViewPage<PromotionalPodRender>
@{
    if (Model == null)
    {
        return;
    }

    var uniqueId = @Guid.NewGuid();




    <div class="promotional-pod @(Model.Image != null ? "-has-image" : "-no-image")">
        <div class="promotional-pod__inner">
            @if (Model.Image != null)
            {
                <div class="promotional-pod__image">
                    <img src="@Model.Image.Url()" alt="@Model.Image.GetImageAlternativeText()" />
                </div>
            }

            <div class="promotional-pod__content">
                <h2 class="promotional-pod__title">@Model.Title</h2>
                <div class="promotional-pod__subtext">
                    @Model.SubText
                </div>

                @if(Model.ShowAsPopUp)
                {
                    <a class="button popup-open" href="#" data-popupid="@uniqueId">
                        <span>@Model.PopupCtalinkTitle</span>
                    </a>

                    <div class="cta-popup" id="@uniqueId">
                        <div class="cta-popup__inner">
                            <div class="cta-popup__text">
                                <div class="cta-popup__header">
                                    <h2 class="cta-popup__header-title">@Model.PopupHeading</h2>
                                    <button class="transparent popup-close" title="Close">
                                        <svg class="[ icon icon-close -blue ]" aria-hidden="true">
                                            <use xlink:href="#sprite-icon-close"></use>
                                        </svg>
                                    </button>
                                </div>
                                <div class="rich-text">
                                    @Html.Raw(Model.Description)
                                </div>
                            </div>
                            <div class="cta-popup__footer">
                                @if (Model.ConfirmationText.HasValue())
                                {
                                    <div class="checkbox-wrapper">
                                        <input id="@uniqueId-check" type="checkbox" />
                                        <label for="@uniqueId-check">@Model.ConfirmationText</label>
                                        <div id="@uniqueId-error" class="field-validation-error">
                                            @Model.ConfirmationErrorMessage
                                        </div>
                                    </div>
                                }
                                @if (Model.CTalink != null)
                                {
                                    <a href="@Model.CTalink.Url" class="button continue" @(!string.IsNullOrWhiteSpace(Model.CTalink.Target) ? "target=" + Model.CTalink.Target + "" : string.Empty) disabled="disabled">
                                        <span>@Model.CTalink.Name</span>
                                    </a>
                                }
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    if ((Model.CTalink?.Url.HasValue()).GetValueOrDefault())
                    {
                        <a href="@Model.CTalink.Url" class="button" target="@Model.CTalink.Target">
                            <span>@Model.CTalink.Name</span>
                        </a>
                    }
                }
            </div>
        </div>
    </div>
}