@inherits UmbracoViewPage<CriteriaLookupResultsViewModel>

<div class="tab-content rich-text" @(!Model.isBuyToLet && !Model.isBespoke ? "" : "data-tab-active") data-tab-title="Residential Criteria" id="ResidentialCriteria" data-isresidential="true">
    @Model.ResidentialCategorySubtext
    <form action="" class="product-filters criteria-filters" data-autocompleteurl="@Url.RouteUrl(CustomRouteNames.AutoCompleteCriteriaLookupAjax, new {controller = "CustomRouteAction", action = "AutoCompleteCriteriaLookup"})" data-ajaxaddurl="@Url.RouteUrl(CustomRouteNames.CriteriaLookupAjax, new {controller = "CustomRouteAction", action = "FindResidentialCriteria"})" data-pageid="@Model.Id">
        <fieldset>
            <legend class="product-filters__title js-toggle-product-filters">
                <span>Filter Criteria</span>
                <div class="product-filters__title-icon">
                    <svg class="[ icon icon-cross-alt ]" aria-hidden="true">
                        <use xlink:href="#sprite-icon-cross-alt"></use>
                    </svg>
                    <svg class="[ icon icon-filter ]" aria-hidden="true">
                        <use xlink:href="#sprite-icon-filter"></use>
                    </svg>
                </div>
            </legend>

            <div class="product-filters-inner js-product-filters">

                <div class="product-filters-input-wrap -select-wrap -flex-grow-1">
                    <label for="CriteriaCategory">@Model.ResidentialSearchCategoryText</label>
                    @Html.DropDownListFor(m => Model.CriteriaCategory, Model.CategoryList, new { id = "CriteriaCategory" })
                </div>

                <div class="product-filters-input-wrap -search-term">
                    <label for="CriteriaName">@Model.ResidentialSearchNameText</label>
                    @Html.TextBoxFor(m => Model.CriteriaName, new { id = "CriteriaName", placeholder = "Enter your search" })
                </div>

                <div class="product-filters-input-wrap product-filters-input-wrap--update-button">
                    <button class="button" id="ResidentialSearch" data-ajaxaddurl="@Url.RouteUrl(CustomRouteNames.CriteriaLookupAjax, new { controller = "CustomRouteAction", action = "FindResidentialCriteria" })" data-pageid="@Model.Id"><span>Search</span></button>
                </div>

                <div class="product-filters-input-wrap -margin-right-0">
                    <button class="button button--secondary js-form-clear" id="ResidentialClear" data-ajaxaddurl="@Url.RouteUrl(CustomRouteNames.CriteriaLookupAjax, new { controller = "CustomRouteAction", action = "FindResidentialCriteria" })" data-pageid="@Model.Id"><span>Clear</span></button>
                </div>

                <input type="text" value="@Model.isBuyToLet" hidden />

                @if (Model.ResidentialPopularSearches != null && Model.ResidentialPopularSearches.Any())
                {
                    <div class="product-filters-popular-searches">
                        <label>Popular searches</label>
                        @foreach (var search in Model.ResidentialPopularSearches.OfType<Criteria>())
                        {
                            var criteriaName = search.CriteriaName.IsNullOrWhiteSpace() ? search.Name : search.CriteriaName;
                            <button id="searchResidentialCriteriaOnly" class="js-popular-criterea-search" data-search-term="@search.Name" data-ajaxaddurl="@Url.RouteUrl(CustomRouteNames.CriteriaLookupAjax, new { controller = "CustomRouteAction", action = "FindResidentialCriteria" })" data-pageid="@Model.Id">
                                <span>
                                    @criteriaName
                                </span>
                            </button>
                        }
                    </div>
                }
            </div>
        </fieldset>
    </form>
    <partial name="/Views/Partials/CriteriaLookupLanding/ResidentialProducts.cshtml" />
</div>

