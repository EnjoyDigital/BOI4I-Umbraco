@inherits UmbracoViewPage<IHeroMixin>

@{
    //Change for classes if preffered
    // var backgroundColour = Model.BackgroundColour?.Color;
    var backgroundColourClass = (Model.BackgroundColour?.Label != "BOI Blue" ? "-bg-teal" : "");
    var Root = Model.AncestorOrSelf<SiteRoot>();
   // var pagePods = Model.HeroPodPicker;
    
    var heroPods = (Model.HeroPodPicker == null ? Root.GlobalHeroPodPicker : Model.HeroPodPicker);
    var bdmCta = (Model.BDmfinderCta != null ? Model.BDmfinderCta : Root.GlobalBdmcta);
    var productCta = (Model.ProductCta != null ? Model.ProductCta : Root.GlobalProductCta);
    var bdmPod = false;
}

<section class="hero-area @backgroundColourClass @(Model.BackgroundImage == null ?  "-no-bg-image" : "")">
    <!--Will need to add some kind of null check for background image depending upon implementation-->

    @if (Model.BackgroundImage != null)
    {
        @* @Html.ResponsiveBackground(Model.BackgroundImage, new { desktop = "HeroAreaDesktop", tablet = "HeroAreaTablet", mobile = "HeroAreaMobile" }, ".hero-area__bg-image") *@
    }

    <div class="hero-area__bg-image"></div>

    <div class="hero-area-inner">
        <div class="hero-area__copy">
            <h1>@(Model.Title.IsNullOrWhiteSpace() ? "" : Model.Title)</h1>
            <p class="h5">@Model.SupportingText</p>
            @if (Model.CTA != null)
            {
                <a href="@Model.CTA.Url" class="button @(backgroundColourClass != "-bg-teal" ? "-white-outline" : "")" target="@Model.CTA.Target">
                    <span>@Model.CTA.Name</span>
                </a>
            }
        </div>

        <div class="hero-area__additional">

            @if (heroPods != null)
            {
                string viewPath = "~/Views/Partials/";
                foreach (var pod in heroPods)
                {
                    switch (pod.ContentType.Alias)
                    {
                        case BDmpodAction.ModelTypeAlias:
                            bdmPod = true;
                            var podAlias = pod.ContentType.Alias.TrimEnd("Action");
                            viewPath = string.Concat(viewPath, "Pods/");
                            @await Component.InvokeAsync("PodsView", new { publishedContent = pod, isHeroPod =true})
                            break;
                        default:
                            <partial name="partials/pods/@pod.ContentType.Alias" model="pod" />
                            break;
                    }
                }
            }

            @if (!Model.HideBdmfinder && !bdmPod)
            {
                <a href="@bdmCta.Url" class="button -block -no-radius -teal">
                    <svg class="[ icon icon-search -black ]" aria-hidden="true">
                        <use xlink:href="#sprite-icon-search"></use>
                    </svg>
                    <span>@bdmCta.Name</span>
                </a>
            }

            @if (!Model.HideProductCta)
            {
                <a href="@productCta.Url" class="button -block -no-radius">
                    <span>@productCta.Name</span>
                </a>
            }
        </div>
    </div>
</section>