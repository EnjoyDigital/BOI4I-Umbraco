@using BOI.Core.Web.Constants
@using static BOI.Core.Web.Constants.SiteAliases
@using static BOI.Core.Web.Extensions.MegaNavExtensions
@model BodyViewModel


<header>
    <div class="header-container">
        <div class="header-logo">
            <a href="/">
                <img src="~/assets/dist/images/small-logo-boi.svg" alt="Bank of Ireland for Intermediaries" class="small">
                <img src="~/assets/dist/images/main-logo-boi.svg" alt="Bank of Ireland for Intermediaries" class="large">
            </a>
        </div>
        <div class="header-top">
            <div class="header-top__content">
                <div class="header-top__content--text">
                    <svg class="[ icon icon-alert ]" aria-hidden="true">
                        <use xlink:href="#sprite-icon-alert"></use>
                    </svg>
                    <p>Intermediary use only</p>
                </div>
                <ul class="header-top__content--links">
                    @if (Model.SiteRoot.ContactUsLink != null)
                    {
                        <li class="header-top__content--links--contact">
                            <a href="@Model.SiteRoot.ContactUsLink.Url" target="@Model.SiteRoot.ContactUsLink.Target">
                                <span>@Model.SiteRoot.ContactUsLink.Name</span>
                            </a>
                        </li>
                    }
                    @if (Model.SiteRoot.RegisterLink != null)
                    {
                        <li class="header-top__content--links--register">
                            <a href="@Model.SiteRoot.RegisterLink.Url" target="@Model.SiteRoot.RegisterLink.Target"><span>@Model.SiteRoot.RegisterLink.Name</span></a>
                        </li>
                    }
                    @if (Model.SiteRoot.LoginLink != null)
                    {
                        <li class="header-top__content--links--login">
                            <a href="@Model.SiteRoot.LoginLink.Url" target="@Model.SiteRoot.LoginLink.Target">
                                <svg class="[ icon icon-padlock -blue ]" aria-hidden="true">
                                    <use xlink:href="#sprite-icon-padlock"></use>
                                </svg>
                                <span>@Model.SiteRoot.LoginLink.Name</span>
                            </a>
                        </li>
                    }
                </ul>
            </div>
            <div class="header-top__mobile">
                @if (Model.SiteRoot.MainNavigation != null && Model.SiteRoot.MainNavigation.Any() && !Model.HideNavigation)
                {
                    <button class="header-top__mobile--hamburger" aria-label="Open main menu" aria-haspopup="true" aria-expanded="false" aria-controls="MainMenu">
                        <img src="~/assets/dist/images/icons/icon-hamburger-dark-blue.svg" alt="">
                    </button>
                }
            </div>
        </div>

        @* Navigation implementation *@
        <nav id="MainMenu" class="header-bottom bottom-nav-active" aria-label="Main menu">
            @if (Model.SiteRoot.MainNavigation != null && Model.SiteRoot.MainNavigation.Any() && !Model.HideNavigation)
            {
                <ul class="header-bottom__menu">
                    @foreach (var item in Model.SiteRoot.MainNavigation)
                    {
                        var itemContent = item.Content as MainNavigationItem;
                        <li>
                            <a href="@itemContent?.NavigationItem?.Url" target="@itemContent?.NavigationItem?.Target" title="@itemContent?.NavigationItem?.Name" @Html.Raw(itemContent?.NavigationItem?.Url == Model?.Content?.Url() ? "aria-current=\"page\"" : string.Empty) @Html.Raw(@itemContent.ChildNavigationItems.Any() ? "aria-haspopup=\"true\"" : string.Empty) aria-expanded="false">
                                @* TODO: Add mobile-only icon *@
                                <div class="menu-item-icon">
                                    <img src="" alt="" width="20" height="20" />
                                </div>
                                @itemContent?.NavigationItem?.Name
                            </a>

                            @if (itemContent.ChildNavigationItems.Any())
                            {
                                <div class="show-submenu"></div>
                                <div class="header-bottom__menu--submenu listing-count-@itemContent.ChildNavigationItems.Count()">



                                    @if (!string.IsNullOrEmpty(itemContent.NavigationItem.Url) && itemContent.NavigationItem.Url != "#")
                                    {
                                        <a href="@itemContent.NavigationItem.Url" class="sr-only sr-only-focusable" @Html.Raw(itemContent.NavigationItem.Url == Model.Content.Url() ? "aria-current=\"page\"" : string.Empty)>@itemContent.NavigationItem.Name</a>
                                    }

                                    @foreach (var child in itemContent.ChildNavigationItems)
                                    {
                                        var childContent = child.Content as MainNavigationItemLevel2;
                                        <div class="submenu-listing">
                                            @if (childContent.NavigationItem.Url == null || childContent.NavigationItem.Url == "#")
                                            {
                                                <span class="submenu-listing__heading">
                                                    @childContent.NavigationItem.Name

                                                    <div class="show-submenu"></div>
                                                </span>
                                            }

                                            @if (childContent.ChildNavigationItems.Any())
                                            {
                                                <ul>
                                                    @foreach (var nextLevelChild in childContent.ChildNavigationItems)
                                                    {
                                                        var nextLevelChildContent = nextLevelChild.Content as MainNavigationItemLevel3;
                                                        <li class="submenu-item">
                                                            <a href="@nextLevelChildContent.NavigationItem.Url" title="@nextLevelChildContent.NavigationItem.Url" @Html.Raw(nextLevelChildContent.NavigationItem.Url == Model.Content?.Url() ? "aria-current=\"page\"" : string.Empty)>@nextLevelChildContent.NavigationItem.Name</a>
                                                        </li>
                                                    }
                                                </ul>
                                            }
                                        </div>
                                    }
                                </div>
                            }

                        </li>
                    }
                    @if (Model.SiteRoot.SearchResultsLink != null)
                    {
                        <button aria-label="Open site search" aria-haspopup="true" aria-expanded="false" aria-controls="SiteSearch" class="header-bottom__menu--search">
                            Search
                            <svg class="[ icon icon-search-alt -blue ]" aria-hidden="true">
                                <use xlink:href="#sprite-icon-search-alt"></use>
                            </svg>
                        </button>
                    }
                    
                </ul>

            }
        </nav>


        @if (Model.SiteRoot.SearchResultsLink != null)
        {
            <div id="SiteSearch" class="site-search" aria-label="Site search" aria-modal="true">
                <form id="searchResultForm" action="@Model.SiteRoot.SearchResultsLink.Url" class="search-bar" data-autocompleteurl="@Model.SearcjAjaxUrl">
                    <div class="search-bar__wrap">
                        <div class="search-bar__search">
                            <div class="search-bar__search--input">
                                <label id="SiteSearchLabel" for="@MainSearchBindAliases.SearchTerm" class="sr-only">Search</label>
                                @Html.TextBox(MainSearchBindAliases.SearchTerm, null, new { placeholder = "Type to search", id = @MainSearchBindAliases.SearchTerm })
                            </div>
                        </div>
                        <div class="search-bar__icons">
                            <button>
                                <svg class="[ icon icon-search-alt -blue ]" aria-hidden="true">
                                    <use xlink:href="#sprite-icon-search-alt"></use>
                                </svg>
                            </button>
                            <button aria-label="Close site search" aria-controls="SiteSearch" class="js-close-site-search close-site-search">
                                <svg class="[ icon icon-cross-alt -blue ]" aria-hidden="true">
                                    <use xlink:href="#sprite-icon-cross-alt"></use>
                                </svg>
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        }

    </div>
</header>